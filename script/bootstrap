#!/usr/bin/env bash

# script/bootstrap: Resolve all dependencies that the application requires to
#                   run.
# This can mean RubyGems, npm packages, Homebrew packages, Ruby versions, Git submodules, etc.
# The goal is to make sure all required dependencies are installed.

set -e

cd "$(dirname "$0")/.."

if [ -f "Brewfile" ] && [ "$(uname -s)" = "Darwin" ]; then
  brew bundle check >/dev/null 2>&1  || {
    echo "==> Installing Homebrew dependenciesâ€¦"
    brew bundle
  }
fi

if [ "$(uname -s)" = "Linux" ]; then
  if ! [ -x "$(command -v docker)" ]; then
    echo "Installing docker..."
    sudo apt install \
      apt-transport-https \
      ca-certificates \
      curl \
      gnupg-agent \
      software-properties-common
    curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
    sudo apt-key fingerprint 0EBFCD88
    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    sudo apt-get update
    sudo apt-get purge lxc-docker
    sudo apt-get install -y docker-engine docker-compose
    sudo groupadd docker
    sudo usermod -aG docker $USER
    newgrp docker
  fi

  if ! [ -x "$(command -v docker-compose)" ]; then
    echo "Installing docker-compose"
    sudo curl -L "https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
  fi
fi

[ -f .env ] || {
  touch .env \
  && echo "ALGOLIA_API_KEY=" > .env \
  && echo "Remember to add ALGOLIA_API_KEY to .env file"
}

if [ -f "docker-compose.yml" ]; then
  script/rebuild
	script/compose pull --ignore-pull-failures
fi
